import logging
import sys
import os
import threading
from flask import Flask, render_template
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackContext
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    stream=sys.stdout,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# —Ç–æ–∫–µ–Ω .env
load_dotenv()
TOKEN = os.getenv('BOT_TOKEN')
MINI_APP_URL = "https://make-ton-telegram-mini-app-1.vercel.app/"

# –°–æ–∑–¥–∞—ë–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__, template_folder="templates")

@app.route('/')
def home():
    return render_template("index.html")


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Flask –≤ –ø–æ—Ç–æ–∫–µ
def run_flask():
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä...")
    app.run(host='0.0.0.0', port=5000, debug=False)


# –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ /start
WELCOME_MESSAGE = (
    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
    "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App –ø—Ä—è–º–æ –≤ Telegram!"
)


async def start(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("üöÄ –û—Ç–∫—Ä—ã—Ç—å Mini App", web_app=WebAppInfo(url=MINI_APP_URL))]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(WELCOME_MESSAGE, reply_markup=reply_markup)


# –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
def run_telegram_bot():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))

    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_flask, daemon=True).start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
    run_telegram_bot()
